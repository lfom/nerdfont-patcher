#!/usr/bin/env python3
# coding=utf8

import fontforge
from argparse import ArgumentParser

# Setup and parse the comand-line arguments
parser = ArgumentParser()
parser.add_argument("--input", help="input file name")
parser.add_argument("--output", help="output file name")
parser.add_argument("--name", help="font name")
parser.add_argument("--style", help="font style")
parser.add_argument("--version", help="(optional) text to add to the existing version")
args = parser.parse_args()

# Configure names
fontstyle=str(args.style)
if ("Mono" in args.input.replace(args.name,"")):
    fontname="{} {} Nerd Font Complete Mono".format(args.name, args.style)
    familyname="{} Nerd Font Mono".format(args.name)
    filefontname="{}NerdFontCM-{}".format(args.name, args.style).replace(" ", "")
else:
    fontname="{} {} Nerd Font Complete".format(args.name, args.style)
    familyname="{} Nerd Font".format(args.name)
    filefontname="{}NerdFontC-{}".format(args.name, args.style).replace(" ", "")
print("Cleaning up font: {}â€¦".format(fontname))

# Rename the file
file=fontforge.open(args.input)
file.fontname=filefontname
file.familyname=familyname
file.fullname=fontname

# Reset SubFamily in some fonts that have the attribute
try:
    if file.sfnt_names[2][2] != fontstyle:
        file.appendSFNTName('English (US)', 'SubFamily', fontstyle + ' ')
        file.appendSFNTName('English (US)', 'SubFamily', fontstyle)
        file.appendSFNTName('English (US)', 'SubFamily', ' '.join(fontstyle).replace(' ', ''))
except AttributeError as err:
    print('Cleanup exception:', err)

file.appendSFNTName('English (US)', 'Preferred Family', familyname)
file.appendSFNTName('English (US)', 'Preferred Styles', fontstyle)
file.appendSFNTName('English (US)', 'Compatible Full', fontname)
file.appendSFNTName('English (US)', 'UniqueID', filefontname)

#file.appendSFNTName("English (US)", "Trademark", "")
for tup in file.sfnt_names:
    print(str(tup))

# Mix our version information in
file.sfntRevision = None # Auto-set (refreshed) by fontforge
file.appendSFNTName("English (US)", "Version", args.version)
file.version = args.version

# Save
file.generate(args.output)
print("Generated '{}' successfully.".format(args.output))
